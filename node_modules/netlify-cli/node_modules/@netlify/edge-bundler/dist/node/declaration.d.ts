import { FunctionConfig } from './config.js';
interface BaseDeclaration {
    cache?: string;
    function: string;
    name?: string;
    generator?: string;
}
type DeclarationWithPath = BaseDeclaration & {
    path: string;
    excludedPath?: string;
};
type DeclarationWithPattern = BaseDeclaration & {
    pattern: string;
    excludedPattern?: string;
};
export type Declaration = DeclarationWithPath | DeclarationWithPattern;
export declare const mergeDeclarations: (tomlDeclarations: Declaration[], functionsConfig: Record<string, FunctionConfig>, deployConfigDeclarations: Declaration[]) => Declaration[];
export declare const parsePattern: (pattern: string) => string;
export {};
